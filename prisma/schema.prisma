generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model default_message_variables {
  id                  String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at          DateTime         @default(now()) @db.Timestamp(6)
  updated_at          DateTime         @default(now()) @db.Timestamp(6)
  name                String           @db.VarChar(255)
  value               String           @db.VarChar(255)
  message_template_id String           @db.Uuid
  message_template    message_template @relation(fields: [message_template_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model message_template {
  id                        String                      @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at                DateTime                    @default(now()) @db.Timestamp(6)
  updated_at                DateTime                    @default(now()) @db.Timestamp(6)
  body                      String                      @db.VarChar(255)
  subject                   String                      @db.VarChar(255)
  team_id                   String                      @db.Uuid
  default_message_variables default_message_variables[]
  team                      team                        @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model sales_activity {
  id               String         @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at       DateTime       @default(now()) @db.Timestamp(6)
  updated_at       DateTime       @default(now()) @db.Timestamp(6)
  sales_channel_id String?        @db.Uuid
  sales_channel    sales_channel? @relation(fields: [sales_channel_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model sales_channel {
  id             String           @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  created_at     DateTime         @default(now()) @db.Timestamp(6)
  updated_at     DateTime         @default(now()) @db.Timestamp(6)
  name           String           @db.VarChar(255)
  team_id        String?          @db.Uuid
  sales_activity sales_activity[]
  team           team?            @relation(fields: [team_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model team {
  id               String             @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description      String?            @db.VarChar(255)
  image            String?            @db.VarChar(255)
  name             String             @db.VarChar(255)
  created_at       DateTime           @default(now()) @db.Timestamp(6)
  updated_at       DateTime           @default(now()) @db.Timestamp(6)
  user_id          String             @db.Uuid
  tenant_id        String             @db.VarChar(255)
  message_template message_template[]
  sales_channel    sales_channel[]
  user             user               @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id          String   @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email       String   @unique @db.VarChar(255)
  firstName   String?  @db.VarChar(255)
  lastName    String?  @db.VarChar(255)
  roq_user_id String   @db.VarChar(255)
  tenant_id   String   @db.VarChar(255)
  created_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at  DateTime @default(now()) @db.Timestamp(6)
  team        team[]
}
